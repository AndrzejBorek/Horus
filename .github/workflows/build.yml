name: Test and build spring project
on:
  push:
  pull_request:

env:
  HORUS_APP_HOST_PORT: 8080
  HORUS_APP_CONTAINER_PORT: 8080

jobs:
  configure-gradle:
    name: Run gradle wrapper
    runs-on: ubuntu-latest
    container:
      image: aborekabits/horus-openjdk-17:DEVOPS-2-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run gradle wrapper
        run: gradle wrapper --gradle-version $GRADLE_VERSION

      - name: Upload gradle wrapper artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: gradle-wrapper-artifacts
          path: |
            gradlew
            gradle/wrapper

  build:
    name: Build project
    runs-on: ubuntu-latest

    container:
      image: aborekabits/horus-openjdk-17:DEVOPS-2-latest
    needs: configure-gradle
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download gradle wrapper artifacts
        uses: actions/download-artifact@v4
        with:
          name: gradle-wrapper-artifacts
          path: ./

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build
        run: ./gradlew build -PbuildCommit=$(echo ${GITHUB_SHA} | head -c 7)

      - name: Save artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: horus-app
          path: build/libs/*.jar

  test:
    name: Test project.
    runs-on: ubuntu-latest
    container:
      image: aborekabits/horus-openjdk-17:DEVOPS-2-latest
    needs: configure-gradle
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download gradle wrapper artifacts
        uses: actions/download-artifact@v4
        with:
          name: gradle-wrapper-artifacts
          path: ./

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Test
        run: ./gradlew test
  
  integration-test:
    name: Run integration tests
    runs-on: ubuntu-latest
    steps:
      - docker run -p $HORUS_APP_HOST_PORT:$HORUS_APP_CONTAINER_PORT
    -
  deploy:
    name: Push image with jar to dockerhub
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' || github.ref_name == 'DEVOPS-2'
    needs: [build, test]
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download jar from build workflow.
        uses: actions/download-artifact@v4
        with:
          name: horus-app
          path: build/libs/

      - name: Builds docker image
        run: docker build --build-arg BUILD_COMMIT=${GITHUB_SHA} -t "$DOCKER_IMAGE_NAME:$(echo ${GITHUB_SHA} | head -c 7)" -t "$DOCKER_IMAGE_NAME:${{ github.ref_name }}-latest" --file docker/Dockerfile.runtime .

      - name: Login to dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push docker image
        run: |
          docker push "$DOCKER_IMAGE_NAME:$(echo ${GITHUB_SHA} | head -c 7)"
          docker push "$DOCKER_IMAGE_NAME:${{ github.ref_name }}-latest"
    env:
      GIT_USERNAME: ${{ github.actor }}
      GIT_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      DOCKER_IMAGE_NAME: "aborekabits/horus-app"
