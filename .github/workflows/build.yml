name: Test and build spring project
on:
  push:
  pull_request:


env:
  DOCKER_IMAGE_NAME: "aborekabits/horus-app"

jobs:
  configure-gradle:
    name: Run gradle wrapper
    runs-on: ubuntu-latest
    container:
      image: aborekabits/horus-openjdk-17:DEVOPS-2-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run gradle wrapper
        run: gradle wrapper --gradle-version $GRADLE_VERSION

      - name: Upload gradle wrapper artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: gradle-wrapper-artifacts
          path: |
            gradlew
            gradle/wrapper

  build:
    name: Build project
    runs-on: ubuntu-latest

    container:
      image: aborekabits/horus-openjdk-17:DEVOPS-2-latest
    needs: configure-gradle
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download gradle wrapper artifacts
        uses: actions/download-artifact@v4
        with:
          name: gradle-wrapper-artifacts
          path: ./

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build
        run: ./gradlew build -PbuildCommit=$(echo ${GITHUB_SHA} | head -c 7)

      - name: Save artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: horus-app
          path: build/libs/*.jar

  test:
    name: Test project.
    runs-on: ubuntu-latest
    container:
      image: aborekabits/horus-openjdk-17:DEVOPS-2-latest
    needs: configure-gradle
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download gradle wrapper artifacts
        uses: actions/download-artifact@v4
        with:
          name: gradle-wrapper-artifacts
          path: ./

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Test
        run: ./gradlew test
  
  deploy:
    name: Push image with jar to dockerhub
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' || github.ref_name == 'DEVOPS-4'
    needs: [build, test]
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download jar from build workflow.
        uses: actions/download-artifact@v4
        with:
          name: horus-app
          path: build/libs/

      - name: Builds docker image
        run: docker build --build-arg BUILD_COMMIT=$(echo ${GITHUB_SHA} | head -c 7) -t "$DOCKER_IMAGE_NAME:$(echo ${GITHUB_SHA} | head -c 7)" -t "$DOCKER_IMAGE_NAME:${{ github.ref_name }}-latest" --file docker/Dockerfile.runtime .

      - name: Login to dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push docker image
        run: |
          docker push "$DOCKER_IMAGE_NAME:$(echo ${GITHUB_SHA} | head -c 7)"
          docker push "$DOCKER_IMAGE_NAME:${{ github.ref_name }}-latest"
    env:
      GIT_USERNAME: ${{ github.actor }}
      GIT_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

  integration-tests:
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: Run latest app
        run: docker run -d -p $HORUS_APP_HOST_PORT:$HORUS_APP_CONTAINER_PORT --name ${HORUS_APP_NAME} "$DOCKER_IMAGE_NAME:$(echo ${GITHUB_SHA} | head -c 7)"
      
      - name: Test with some timeout to let app start
        run: |
          for i in {1..10}; do
            if curl -s localhost:$HORUS_APP_HOST_PORT | grep -q "Hello world Horus!"; then
              echo "Expected message. Test passed."
              exit 0
            else
              echo "Waiting for startup"
              sleep 5
            fi
          done
          echo "No response in time."
          docker logs ${HORUS_APP_NAME}
          exit 1
    env:
      HORUS_APP_NAME: "horus-app"
      HORUS_APP_HOST_PORT: 8080
      HORUS_APP_CONTAINER_PORT: 8080
